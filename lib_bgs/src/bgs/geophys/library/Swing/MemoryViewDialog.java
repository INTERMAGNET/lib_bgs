/*
 * MemoryViewDialog.java
 *
 * Created on 27 February 2007, 21:52
 */

package bgs.geophys.library.Swing;

import java.awt.BorderLayout;
import java.text.DecimalFormat;
import javax.swing.Timer;

/**
 *
 * @author  smf
 */
public class MemoryViewDialog extends javax.swing.JDialog 
{
    
    private Timer timer;
    private DecimalFormat format; 
    
    /** Creates new form MemoryViewDialog */
    public MemoryViewDialog(java.awt.Frame parent, boolean modal) 
    {
        super(parent, modal);
        initComponents();
        initComponents2();
    }
    
    /** Creates new form MemoryViewDialog */
    public MemoryViewDialog(java.awt.Dialog parent, boolean modal) 
    {
        super(parent, modal);
        initComponents();
        initComponents2();
    }

    private void initComponents2 ()
    {
        MemoryTablePanel.add (MemoryTable.getTableHeader(), BorderLayout.NORTH);
        
        format = (DecimalFormat) DecimalFormat.getInstance();
        TimerActionPerformed (null);

        pack ();
        
        timer = new Timer (500, (new java.awt.event.ActionListener() 
                                {
                                     public void actionPerformed(java.awt.event.ActionEvent evt) 
                                     {
                                         TimerActionPerformed(evt);
                                     }
                                }));
        timer.start();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        MemoryTablePanel = new javax.swing.JPanel();
        MemoryTable = new javax.swing.JTable();
        MemoryProgressBar = new javax.swing.JProgressBar();
        ButtonPanel = new javax.swing.JPanel();
        CloseButton = new javax.swing.JButton();
        GarbageCollectCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Memory Allocation Details");
        setAlwaysOnTop(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        MemoryTablePanel.setLayout(new java.awt.BorderLayout());

        MemoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Used (bytes)", "Heap size", "Max. heap"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        MemoryTablePanel.add(MemoryTable, java.awt.BorderLayout.CENTER);

        getContentPane().add(MemoryTablePanel, java.awt.BorderLayout.NORTH);

        MemoryProgressBar.setStringPainted(true);
        getContentPane().add(MemoryProgressBar, java.awt.BorderLayout.CENTER);

        ButtonPanel.setLayout(new java.awt.BorderLayout());

        CloseButton.setText("Close");
        CloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseButtonActionPerformed(evt);
            }
        });

        ButtonPanel.add(CloseButton, java.awt.BorderLayout.EAST);

        GarbageCollectCheckBox.setSelected(true);
        GarbageCollectCheckBox.setText("Collect garbage");
        GarbageCollectCheckBox.setToolTipText("Automatically collect garbage before presenting statistics.");
        GarbageCollectCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        GarbageCollectCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        ButtonPanel.add(GarbageCollectCheckBox, java.awt.BorderLayout.CENTER);

        getContentPane().add(ButtonPanel, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        CloseButtonActionPerformed (null);
    }//GEN-LAST:event_formWindowClosing

    private void CloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseButtonActionPerformed
        timer.stop();
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_CloseButtonActionPerformed

    private void TimerActionPerformed (java.awt.event.ActionEvent evt) 
    {
        long mem_free, heap_size, max_heap_size, mem_used, percent_used;
        Runtime runtime;

        runtime = Runtime.getRuntime();
        
        if (GarbageCollectCheckBox.isSelected()) System.gc();
        
        mem_free = runtime.freeMemory();
        heap_size = runtime.totalMemory();
        max_heap_size = runtime.maxMemory();
        
        mem_used = heap_size - mem_free;
        percent_used = (((mem_used * 100) + (max_heap_size / 200)) / max_heap_size) ;
        
        MemoryProgressBar.setValue ((int) percent_used);
        MemoryProgressBar.setString (Long.toString (percent_used) + "%");
        
        MemoryTable.setValueAt (format.format (mem_used),      0, 0);
        MemoryTable.setValueAt (format.format (heap_size),     0, 1);
        MemoryTable.setValueAt (format.format (max_heap_size), 0, 2);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ButtonPanel;
    private javax.swing.JButton CloseButton;
    private javax.swing.JCheckBox GarbageCollectCheckBox;
    private javax.swing.JProgressBar MemoryProgressBar;
    private javax.swing.JTable MemoryTable;
    private javax.swing.JPanel MemoryTablePanel;
    // End of variables declaration//GEN-END:variables

}
