/*
 * DebugDialog.java
 *
 * Created on 16 June 2004, 15:06
 */

package bgs.geophys.ImagCD.ImagCDViewer.Dialogs;

import bgs.geophys.library.SerialPort.*;
import bgs.geophys.library.Swing.SwingUtils;

/**
 *
 * @author  smf
 */
public class DebugDialog extends javax.swing.JDialog
{
    
    /** Creates new form SerialMonitorDialog
     * @param parent the parent component
     * @param modal true to create a modal dialog */
    public DebugDialog (java.awt.Frame parent, boolean modal)
    {
        super(parent, modal);
        initComponents();
        
        // resize the table column widths
        SwingUtils.ResizeTableColumnWidths(SerialDataTable, 1, 1000, 17, 17, 66);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        TableScrollPane = new javax.swing.JScrollPane();
        SerialDataTable = new javax.swing.JTable();
        ControlAreaPanel = new javax.swing.JPanel();
        ClearButton = new javax.swing.JButton();
        ScrollToNewestCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Debug view");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        SerialDataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Time", "Module", "Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableScrollPane.setViewportView(SerialDataTable);

        getContentPane().add(TableScrollPane, java.awt.BorderLayout.CENTER);

        ClearButton.setText("Clear Log");
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });

        ControlAreaPanel.add(ClearButton);

        ScrollToNewestCheckBox.setSelected(true);
        ScrollToNewestCheckBox.setText("Scroll to newest data");
        ControlAreaPanel.add(ScrollToNewestCheckBox);

        getContentPane().add(ControlAreaPanel, java.awt.BorderLayout.SOUTH);

        pack();
    }//GEN-END:initComponents

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
        javax.swing.table.DefaultTableModel table_model;
        
        table_model = (javax.swing.table.DefaultTableModel) SerialDataTable.getModel();
        synchronized (table_model)
        {
            table_model.setRowCount (0);
        }
    }//GEN-LAST:event_ClearButtonActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    public void logEvent (String module_name, String description) 
    {
        javax.swing.table.DefaultTableModel table_model;
        java.text.SimpleDateFormat date_format;
        String cells [];
        
        // add the data
        table_model = (javax.swing.table.DefaultTableModel) SerialDataTable.getModel();
        cells = new String [3];
        date_format = new java.text.SimpleDateFormat ("kk:mm:ss");
        date_format.setTimeZone (java.util.TimeZone.getTimeZone ("GMT"));
        cells [0] = date_format.format (new java.util.Date ());
        cells [1] = module_name;
        cells [2] = description;
        table_model.addRow (cells);
        if (ScrollToNewestCheckBox.isSelected())
            SerialDataTable.scrollRectToVisible(SerialDataTable.getCellRect (SerialDataTable.getRowCount()-1, 0, false));
    }    
   
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClearButton;
    private javax.swing.JPanel ControlAreaPanel;
    private javax.swing.JCheckBox ScrollToNewestCheckBox;
    private javax.swing.JTable SerialDataTable;
    private javax.swing.JScrollPane TableScrollPane;
    // End of variables declaration//GEN-END:variables
    
}
