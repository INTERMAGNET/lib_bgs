/*
 * ExportMessageDialog.java
 *
 * Created on 14 February 2007, 21:02
 */

package bgs.geophys.ImagCD.ImagCDViewer.Dialogs;

import javax.swing.JDialog;
import javax.swing.JFrame;

/**
 *
 * @author  smf
 */
public class ExportMessageDialog extends javax.swing.JDialog 
{
    
    boolean stop_pressed;
    
    /** Creates new form ExportMessageDialog */
    public ExportMessageDialog (JFrame parent, boolean modal,
                                String title, String message, 
                                boolean continueShowingWarnings,
                                boolean continueShowingErrors)
    {
        super(parent, modal);
        initComponents();
        this.setTitle(title);
        MessageLabel.setText (message);
        ShowWarningsCheckBox.setSelected(continueShowingWarnings);
        ShowErrorsCheckBox.setSelected(continueShowingErrors);
        stop_pressed = false;
    }
    
    /** Creates new form ExportMessageDialog */
    public ExportMessageDialog (JDialog parent, boolean modal,
                                String title, String message, 
                                boolean continueShowingWarnings,
                                boolean continueShowingErrors)
    {
        super(parent, modal);
        initComponents();
        this.setTitle(title);
        MessageLabel.setText (message);
        ShowWarningsCheckBox.setSelected(continueShowingWarnings);
        ShowErrorsCheckBox.setSelected(continueShowingErrors);
        stop_pressed = false;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        MessageLabel = new javax.swing.JLabel();
        ShowWarningsCheckBox = new javax.swing.JCheckBox();
        ShowErrorsCheckBox = new javax.swing.JCheckBox();
        Separator1 = new javax.swing.JSeparator();
        ContinueButton = new javax.swing.JButton();
        StopButton = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        MessageLabel.setForeground(new java.awt.Color(255, 0, 0));
        MessageLabel.setText("Messages go here");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 5, 0);
        getContentPane().add(MessageLabel, gridBagConstraints);

        ShowWarningsCheckBox.setSelected(true);
        ShowWarningsCheckBox.setText("Continue showing warnings");
        ShowWarningsCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        ShowWarningsCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(ShowWarningsCheckBox, gridBagConstraints);

        ShowErrorsCheckBox.setSelected(true);
        ShowErrorsCheckBox.setText("Continue showing errors");
        ShowErrorsCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        ShowErrorsCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(ShowErrorsCheckBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(8, 10, 4, 10);
        getContentPane().add(Separator1, gridBagConstraints);

        ContinueButton.setText("Continue exporting");
        ContinueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContinueButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 0);
        getContentPane().add(ContinueButton, gridBagConstraints);

        StopButton.setText("Stop exporting");
        StopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StopButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        getContentPane().add(StopButton, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        closeDialog ();
    }//GEN-LAST:event_formWindowClosing

    private void ContinueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContinueButtonActionPerformed
        stop_pressed = false;
        closeDialog ();
    }//GEN-LAST:event_ContinueButtonActionPerformed

    private void StopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StopButtonActionPerformed
        stop_pressed = true;
        closeDialog ();
    }//GEN-LAST:event_StopButtonActionPerformed
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ContinueButton;
    private javax.swing.JLabel MessageLabel;
    private javax.swing.JSeparator Separator1;
    private javax.swing.JCheckBox ShowErrorsCheckBox;
    private javax.swing.JCheckBox ShowWarningsCheckBox;
    private javax.swing.JButton StopButton;
    // End of variables declaration//GEN-END:variables

    public boolean isContinueShowingWarnings ()
    {
        return ShowWarningsCheckBox.isSelected();
    }

    public boolean isContinueShowingErrors ()
    {
        return ShowErrorsCheckBox.isSelected();
    }
    
    public boolean isStopPressed ()
    {
        return stop_pressed;
    }
    
    private void closeDialog () 
    {
      setVisible(false);
      dispose();
    }
}
