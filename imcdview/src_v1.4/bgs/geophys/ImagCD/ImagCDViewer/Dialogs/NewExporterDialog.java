/*
 * NewExporterDialog.java
 *
 * Created on 01 April 2009
 */

package bgs.geophys.ImagCD.ImagCDViewer.Dialogs;

import bgs.geophys.ImagCD.ImagCDViewer.Data.CDDatabaseList;
import bgs.geophys.ImagCD.ImagCDViewer.Data.CDErrorList;
import bgs.geophys.ImagCD.ImagCDViewer.GlobalObjects;

/**
 *
 * @author  smf
 */
public class NewExporterDialog extends javax.swing.JDialog 
{
    private String keyName;
    private String showDialogAgainName;
    
    /** Creates new form NewUserDialog
     * @param parent the parent container
     * @param modal true for a modal dialog
     * @param keyName name of the key that holds yes/no for whether to show this dialog */
    public NewExporterDialog(java.awt.Frame parent, boolean modal, String keyName, String showDialogAgainName) 
    {
        super(parent, modal);
        
        this.keyName = keyName;
        this.showDialogAgainName = showDialogAgainName;
        initComponents();
    }
    
    /** Creates new form NewUserDialog
     * @param parent the parent container
     * @param modal true for a modal dialog
     * @param keyName name of the key that holds yes/no for whether to show this dialog */
    public NewExporterDialog(java.awt.Dialog parent, boolean modal, String keyName, String showDialogAgainName) 
    {
        super(parent, modal);
        
        this.keyName = keyName;
        this.showDialogAgainName = showDialogAgainName;
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        HelpText = new javax.swing.JTextArea();
        ButtonPanel = new javax.swing.JPanel();
        AcceptButton = new javax.swing.JButton();
        DeclineButton = new javax.swing.JButton();
        ShowNewExporterInfoCheckbox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Export Data Information");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        HelpText.setColumns(20);
        HelpText.setEditable(false);
        HelpText.setRows(5);
        HelpText.setText("     CONDITIONS OF USE FOR DATA PROVIDED THROUGH INTERMAGNET:\nThe data made available through INTERMAGNET are provided for \nyour use and are not for commercial use or sale or distribution \nto third parties without the written permission of the institute \n(http://www.intermagnet.org/Institutes_e.html) operating \nthe observatory. Publications making use of the data \nshould include an acknowledgment statement of the form given below. \nA citation reference should be sent to the INTERMAGNET Secretary \n(secretary@intermagnet.org) for inclusion in a publications list \non the INTERMAGNET website.\n\n     ACKNOWLEDGEMENT OF DATA FROM OBSERVATORIES \n     PARTICIPATING IN INTERMAGNET\nWe offer two acknowledgement templates. The first is for cases \nwhere data from many observatories have been used and it is not \npractical to list them all, or each of their operating institutes. \nThe second is for cases where research results have been produced \nusing a smaller set of observatories.\n\n     Suggested Acknowledgement Text (template 1)\nThe results presented in this paper rely on data collected \nat magnetic observatories. We thank the national institutes that \nsupport them and INTERMAGNET for promoting high standards of \nmagnetic observatory practice (www.intermagnet.org).\n\n     Suggested Acknowledgement Text (template 2)\nThe results presented in this paper rely on the data \ncollected at <observatory name>. We thank <institute name>, \nfor supporting its operation and INTERMAGNET for promoting high \nstandards of magnetic observatory practice (www.intermagnet.org).\n");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        getContentPane().add(HelpText, gridBagConstraints);

        AcceptButton.setText("Accept");
        AcceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcceptButtonActionPerformed(evt);
            }
        });
        ButtonPanel.add(AcceptButton);

        DeclineButton.setText("Decline");
        DeclineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeclineButtonActionPerformed(evt);
            }
        });
        ButtonPanel.add(DeclineButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(ButtonPanel, gridBagConstraints);

        ShowNewExporterInfoCheckbox.setSelected(true);
        ShowNewExporterInfoCheckbox.setText("Show this window at each export");
        ShowNewExporterInfoCheckbox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        ShowNewExporterInfoCheckbox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        getContentPane().add(ShowNewExporterInfoCheckbox, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        DeclineButtonActionPerformed (null);
    }//GEN-LAST:event_formWindowClosing

    private void DeclineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeclineButtonActionPerformed
        GlobalObjects.configuration.setProperty(keyName, "NotAccepted");
        GlobalObjects.configuration.setProperty (showDialogAgainName, "Y");
        this.setVisible(false);
        this.dispose();
}//GEN-LAST:event_DeclineButtonActionPerformed

    private void AcceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcceptButtonActionPerformed
        GlobalObjects.configuration.setProperty (keyName, 
                                                 "Accepted");
        GlobalObjects.configuration.setProperty (showDialogAgainName, 
                                    this.ShowNewExporterInfoCheckbox.isSelected() ? "Y" : "N");
        this.setVisible(false);
        this.dispose();
}//GEN-LAST:event_AcceptButtonActionPerformed
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AcceptButton;
    private javax.swing.JPanel ButtonPanel;
    private javax.swing.JButton DeclineButton;
    private javax.swing.JTextArea HelpText;
    private javax.swing.JCheckBox ShowNewExporterInfoCheckbox;
    // End of variables declaration//GEN-END:variables

    
}
