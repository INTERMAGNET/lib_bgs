
package bgs.geophys.library.RealTimeData.Sdas;

import bgs.geophys.library.RealTimeData.*;

/***************************************************************
 * SdasNetException is a class that provides an exception for
 * the SdasNet class. Every instance has a code which can
 * be obtained by calling the GetCode method. Error processors
 * can check the code against the list of public constant
 * error code values.
 *
 * @author  S. Flower
 * @version 0.0
 **************************************************************/
public class SdasNetException extends DataNetException
{

    // public constants - a list of possible error codes
    /** This error code maps directly to an error code with
      * the same number that is generated by the SDAS server.
      * This code must be kept in step with the servers error code. */
        public static final int CHANNEL_OUT_OF_RANGE = 1,
                            BAD_CHANNEL_INDEX = 2,
                            ERROR_MRB_FILE = 3,
                            NO_SUCH_CHANNEL = 4,
                            NOT_ENOUGH_SERVER_MEMORY = 5,
                            BAD_GMRB_RETURN_CODE = 6,
                            BAD_GMRB_PARAMETERS = 7,
                            INCOMPATIBLE_ZLIB_VERSION = 8,
                            BAD_CMPR_PARAMETERS = 9,
                            BAD_MISS_PARAMETERS = 10,
                            BAD_INFO_PARAMETERS = 11,
                            BAD_DATA_DATE = 12,
                            BAD_DATA_TIME = 13,
                            NO_SUCH_CHANNEL_2 = 14,
                            BAD_SRAT_PARAMETERS = 15,
                            BAD_SRAT_DATE = 16,
                            BAD_SRAT_TIME_2 = 17,
                            BAD_SRAT_DURATION = 18,
                            NO_DATA_AVAILABLE = 19,
                            BAD_DATA_PARAMETERS = 20,
                            BAD_DATA_DATE_2 = 21,
                            BAD_DATA_TIME_2 = 22,
                            BAD_DATA_DURATION = 23,
                            NO_DATA_AVAILABLE_2 = 24,
                            SAMPLE_RATE_CHANGES = 25,
                            CHANNEL_DETAILS_CHANGE = 26,
                            DISK_IO_ERROR = 27,
                            BAD_GET_DATA_RETURN_CODE = 28,
                            INCORRECT_NUMBER_OF_SAMPLES = 29,
                            BAD_BINT_SYNTAX = 30,
                            BAD_BINT_NUMBER = 31,
                            UNKNOWN_COMMAND = 32,
                            BAD_DERR_PARAMETERS = 33,
                            BAD_FACQ_PARAMETERS = 34,
                            NO_ACQUISITION_CONFIG = 35,
                            BAD_FILE_PARAMETERS = 36,
                            BAD_DIRE_PARAMETERS = 37,
                            NO_SUCH_FILE_OR_DIR = 38,
                            DIR_LISTING_ERROR = 39,
                            CHAN_GROUP_ERROR = 40,
                            CHAN_GROUP_OUT_OF_RANGE = 41,
                            BAD_GROP_PARAMETERS = 42,
                            BAD_EVNT_PARAMETERS = 43,
                            //END_OF_EVENT_LIST = 44, Defined in Net interface
                            EVENT_DATA_ERROR = 45,
                            BAD_FGAP_PARAMETERS = 46,
                            END_OF_GAP_DATA = 47,
                            GAP_DATA_ERROR = 48,
                            SAMPLE_RATE_ERROR = 49,
                            BAD_STAT_PARAMETERS = 50,
                            BAD_STAT_DATE = 51,
                            NO_STAT_AVAILABLE = 52;
                            

    /** This error code is generated by local (client side) software. All
      * local error codes have negative values to distinguish them from
      * server generated codes. */
    public static final int NOT_OPEN = -1,
                            CORRUPT_SERVER_DATA = -2,
                            UNEXPECTED_CLOSE = -3,
                            CANT_GET_SERVER_ERROR = -4,
                            DATA_MUST_BE_CONTIGUOUS = -5,
                            BAD_HOST_NAME = -6;
        
    /***************************************************************
     * Constructs an SdasNetException with the specified detail message.
     *
     * @param cd the code for the exception - using this parameter
     *        allows error processors to quickly find the errors
     *        they want to process
     * @param msg the detail message.
     **************************************************************/
    public SdasNetException (int cd, String msg)
    {
        super(cd, msg);
    }

    /****************************************************************
     * Returns wether the current code is about missing data.
     *          Overrides NetException's method.
     *
     * @return True if code represents missing data, false otherwise.
     ***************************************************************/
    public boolean isDataMissingCode()
    {
        switch (code)
        {
            case NO_SUCH_CHANNEL:
            case NO_SUCH_CHANNEL_2:
            case NO_DATA_AVAILABLE:
            case NO_DATA_AVAILABLE_2:
                return true;
            default:       
                return false;
        }
    }
}

