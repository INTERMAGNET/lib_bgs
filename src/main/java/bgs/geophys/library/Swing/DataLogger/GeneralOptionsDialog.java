/*
 * GeneralOptionsDialog.java
 *
 * Created on 25 June 2004, 10:33
 */

package bgs.geophys.library.Swing.DataLogger;

import java.awt.*;
import java.util.*;
import java.awt.event.*;
import java.text.*;
import java.net.*;
import javax.swing.*;

import bgs.geophys.library.Misc.*;
import bgs.geophys.library.DataLogger.*;

/**
 *
 * @author  smf
 */
public class GeneralOptionsDialog extends JDialog
{
    
    // private members that make up the options that the user can change
    private URL system_list_update_address;  // set to NULL if no system list is selected
    private boolean use_data_compression;    // true to use compression
    private boolean use_channel_names;       // true to use channel names as well as numbers
    private boolean show_start_dialog;       // true to show help information when program start
    private boolean use_system_list;         // true to use system list

    // flag to method which raises this dialog that options need updated
    private boolean update;
    /** Creates new form GeneralOptionsDialog
     * @param parent the component that is the parent for this dialog
     * @param modal true for a modal dialog
     * @param use_system_list the starting value for the 'use system list' checkbox
     * @param system_list_update_address the starting value for the address of the list of data logging system (may be null)
     * @param use_data_compression the starting value for the 'use data compression' checkbox
     * @param use_channel_names the starting value for the 'use channel names' checkbox
     * @param show_start_dialog the starting value for the 'show startup dialog' checkbox
     * @param must_use_address only display the address choice text field - don't
     *        allow the user have no system list */
    public GeneralOptionsDialog(Frame parent, boolean modal,
                                boolean use_system_list, URL system_list_update_address, 
                                boolean use_data_compression, boolean use_channel_names, 
                                boolean show_start_dialog, boolean must_use_address) 
    {
        super(parent, modal);
        
        // set variables for this object
        this.system_list_update_address = system_list_update_address;
        this.use_data_compression = use_data_compression;
        this.use_channel_names = use_channel_names;
        this.show_start_dialog = show_start_dialog;
        this.use_system_list = use_system_list;
    
        // create the dialog
        initComponents();
        getRootPane().setDefaultButton (update_button);
        
        // configure the dialog
        if (must_use_address)
        {
            yes_system_list_button.setSelected (true);
            no_system_list_button.setEnabled (false);
        }
        else if (use_system_list) yes_system_list_button.setSelected(true);
        else no_system_list_button.setSelected(true);
        if (system_list_update_address != null)
            address_text.setText (system_list_update_address.toExternalForm());
        use_data_compression_box.setSelected (use_data_compression);
        use_channel_names_box.setSelected (use_channel_names);
        show_start_dialog_box.setSelected(show_start_dialog);
        

    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        system_list_button_group = new javax.swing.ButtonGroup();
        system_list_panel = new javax.swing.JPanel();
        no_system_list_button = new javax.swing.JRadioButton();
        yes_system_list_button = new javax.swing.JRadioButton();
        address_text = new javax.swing.JTextField();
        options_panel = new javax.swing.JPanel();
        use_data_compression_box = new javax.swing.JCheckBox();
        use_channel_names_box = new javax.swing.JCheckBox();
        show_start_dialog_box = new javax.swing.JCheckBox();
        control_area_panel = new javax.swing.JPanel();
        update_button = new javax.swing.JButton();
        cancel_button = new javax.swing.JButton();

        setTitle("Data Logger Options");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        system_list_panel.setLayout(new java.awt.BorderLayout());

        system_list_panel.setBorder(new javax.swing.border.EtchedBorder());
        no_system_list_button.setText("Don't use a system list");
        system_list_button_group.add(no_system_list_button);
        system_list_panel.add(no_system_list_button, java.awt.BorderLayout.NORTH);

        yes_system_list_button.setText("Download the system list from the following address:");
        system_list_button_group.add(yes_system_list_button);
        system_list_panel.add(yes_system_list_button, java.awt.BorderLayout.CENTER);

        address_text.setColumns(40);
        system_list_panel.add(address_text, java.awt.BorderLayout.SOUTH);

        getContentPane().add(system_list_panel, java.awt.BorderLayout.NORTH);

        options_panel.setLayout(new java.awt.GridBagLayout());

        use_data_compression_box.setText("Use data compression");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        options_panel.add(use_data_compression_box, gridBagConstraints);

        use_channel_names_box.setText("Use channel names");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        options_panel.add(use_channel_names_box, gridBagConstraints);

        show_start_dialog_box.setText("Show help at program start");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        options_panel.add(show_start_dialog_box, gridBagConstraints);

        getContentPane().add(options_panel, java.awt.BorderLayout.WEST);

        update_button.setText("Update");
        update_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_buttonActionPerformed(evt);
            }
        });

        control_area_panel.add(update_button);

        cancel_button.setText("Cancel");
        cancel_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel_buttonActionPerformed(evt);
            }
        });

        control_area_panel.add(cancel_button);

        getContentPane().add(control_area_panel, java.awt.BorderLayout.SOUTH);

        pack();
    }//GEN-END:initComponents

    private void cancel_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel_buttonActionPerformed
        closeDialog (null);
        update = false;
    }//GEN-LAST:event_cancel_buttonActionPerformed

    private void update_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_buttonActionPerformed
        boolean bring_down_dialog, get_address;
        Object source;
        String string;
        
        bring_down_dialog = false;
        update = true;
        use_data_compression = use_data_compression_box.isSelected();
        use_channel_names = use_channel_names_box.isSelected();
        show_start_dialog = show_start_dialog_box.isSelected();
        if (yes_system_list_button == null) use_system_list = true;
        else use_system_list = yes_system_list_button.isSelected();
        if (yes_system_list_button == null) get_address = true;
        else if (yes_system_list_button.isSelected()) get_address = true;
        else get_address = false;
        
        if (! get_address) 
        {
            system_list_update_address = null;
            bring_down_dialog = true;
        }
        else 
        {
            string = address_text.getText();
            try 
            {
                if (string.length() <= 0) throw (new MalformedURLException());
                system_list_update_address = new URL(string);
                bring_down_dialog = true;
            }
            catch (MalformedURLException e) 
            {
                if (string.length() <= 0)
                    JOptionPane.showMessageDialog (this, "Please enter an address",
                                                   "Error", JOptionPane.ERROR_MESSAGE);
                else
                    JOptionPane.showMessageDialog (this, "Bad address: " + address_text.getText(),
                                                   "Error", JOptionPane.ERROR_MESSAGE);
                bring_down_dialog = false;
            }
        }
    
        if (bring_down_dialog) closeDialog(null);
    
    }//GEN-LAST:event_update_buttonActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
  
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address_text;
    private javax.swing.JButton cancel_button;
    private javax.swing.JPanel control_area_panel;
    private javax.swing.JRadioButton no_system_list_button;
    private javax.swing.JPanel options_panel;
    private javax.swing.JCheckBox show_start_dialog_box;
    private javax.swing.ButtonGroup system_list_button_group;
    private javax.swing.JPanel system_list_panel;
    private javax.swing.JButton update_button;
    private javax.swing.JCheckBox use_channel_names_box;
    private javax.swing.JCheckBox use_data_compression_box;
    private javax.swing.JRadioButton yes_system_list_button;
    // End of variables declaration//GEN-END:variables

    /** get the URL to retrieve the system list from
     * @return the URL whcih is null if the system list is not to be used */
    public URL getSystemListUpdateAddress () { return system_list_update_address; }

    public boolean getUseDataCompression () { return use_data_compression; }

    public boolean getUseChannelNames () { return use_channel_names; }
  
    public boolean getShowStartDialog () { return show_start_dialog; }
  
    public boolean getUseSystemList () { return use_system_list; }

    /** call this from the method which raises this dialog to find out
     *  if options need to be updated after this dialog is hidden
     * @return true if update is required, else false */
    public boolean doUpdate () { return update; }
   
}
