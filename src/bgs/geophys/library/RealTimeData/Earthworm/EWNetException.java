package bgs.geophys.library.RealTimeData.Earthworm;

import bgs.geophys.library.RealTimeData.*;

/***************************************************************
 * EWNetException is a class that provides an exception for
 * the EWNet class. Every instance has a code which can
 * be obtained by calling the GetCode method. Error processors
 * can check the code against the list of public constant
 * error code values.
 *
 **************************************************************/
public class EWNetException extends DataNetException
{

    // public constants - a list of possible error codes
    /** This error code corresponds to flags sent by WaveServer.
      * See notes in \src\archiving\wave_serverV\wave_serverV.c */
    public static final int DATA_IS_RIGHT_OF_TANK = 101,
                            DATA_IS_LEFT_OF_TANK = 102,
                            DATA_IS_IN_GAP = 103,
                            BAD_REQUEST = 104,
                            TANK_IS_CORRUPT = 105,
                            CHANNEL_NOT_FOUND = 106,
                            UNKNOWN_ERROR = 107,
                            UNKNOWN_FLAG = 108;
                            
                            

    /** This error code is generated by local (client side) software. All
      * local error codes have negative values to distinguish them from
      * server generated codes. */
    public static final int NOT_OPEN = -101,
                            CORRUPT_SERVER_DATA = -102,
                            UNEXPECTED_CLOSE = -103,
                            CANT_GET_SERVER_ERROR = -104,
                            DATA_MUST_BE_CONTIGUOUS = -105,
                            BAD_HOST_NAME = -106,
                            BAD_REQUEST_ID = -107,
                            WRONG_FIELDS_RECIEVED = -108,
                            CANT_OPEN_CONNECTION = -109,
                            BAD_CHANNEL_INDEX = -110,
                            UNSUPPORTED_DATA_TYPE = -111,
                            SAMPLE_RATE_CHANGES = - 112,
                            CONNECTION_RESET = -113;
    
    
    /***************************************************************
     * Constructs an EWNetException with the specified detail message.
     *
     * @param cd the code for the exception - using this parameter
     *        allows error processors to quickly find the errors
     *        they want to process
     * @param msg the detail message.
     **************************************************************/
    public EWNetException (int cd, String msg)
    {
        super(cd, msg);
    }
    
    /****************************************************************
     * Returns wether the current code is about missing data.
     *          Overrides NetException's method.
     *
     * @return True if code represents missing data, false otherwise.
     ***************************************************************/
    public boolean isDataMissingCode()
    {
        switch (code)
        {
            case DATA_IS_RIGHT_OF_TANK:      
            case DATA_IS_LEFT_OF_TANK:
            case DATA_IS_IN_GAP:
            case TANK_IS_CORRUPT:
                return true;
            default:       
                return false;
        }
    }
}