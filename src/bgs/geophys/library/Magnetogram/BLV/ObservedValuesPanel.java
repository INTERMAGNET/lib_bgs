/*
 * ObservedValuesPanel.java
 *
 * Created on 08 October 2008, 15:44
 */

package bgs.geophys.library.Magnetogram.BLV;


import bgs.geophys.library.Data.ImagCD.BLVData;
import bgs.geophys.library.Swing.ExcelAdapter;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  jex
 */
public class ObservedValuesPanel extends javax.swing.JPanel {
 private ExcelAdapter excel_adapter;   
        private class BLVTableModel extends DefaultTableModel
    {
        public BLVTableModel (Object[][] data, String[] columnNames)
        {
            super (data, columnNames);
        }
        @Override
        public boolean isCellEditable(int row, int column) 
        {
            return false;
        }
    }
 
        /** Creates new form ObservedValuesPanel
         * @param bLV 
         */
        
    public ObservedValuesPanel(final BLVData bLV) {
    new ObservedValuesPanel(bLV,"Observed Values From: "+ bLV.getSourceFile());    
    }
    
    public ObservedValuesPanel(final BLVData bLV, String title) {
        initComponents();
        fileNameLabel.setText(title);
        Object[][] tableEntries;
        String[] columnTitles;
        if(bLV.getFormat().equalsIgnoreCase("IBFV1.11")){
            tableEntries = new Object[bLV.getObservedValues().size()][5];
            columnTitles = new String[5];
        }
        else{
            tableEntries = new Object[bLV.getObservedValues().size()][6];
            columnTitles = new String[6];
        }

        for (int i=0;i<bLV.getObservedValues().size();i++){
            Calendar c = new GregorianCalendar(bLV.getYear(),1,1);
            c.set(Calendar.DAY_OF_YEAR,bLV.getObservedValue(i).getDay());
            tableEntries[i][0] = String.format("%2d/%2d/%4d",
                                       c.get(Calendar.DAY_OF_MONTH),
                                       (c.get(Calendar.MONTH)+1),
                                       c.get(Calendar.YEAR));
                                 
            tableEntries[i][1] = bLV.getObservedValue(i).getDay(); 
            tableEntries[i][2] = bLV.getObservedValue(i).getComponentValueScaled(bLV.getComponentAt(0),BLVData.getScalingFromFile());
            tableEntries[i][3] = bLV.getObservedValue(i).getComponentValueScaled(bLV.getComponentAt(1),BLVData.getScalingFromFile());
            tableEntries[i][4] = bLV.getObservedValue(i).getComponentValueScaled(bLV.getComponentAt(2),BLVData.getScalingFromFile());
            if(bLV.getFormat().equalsIgnoreCase("IBFV2.00")){
              tableEntries[i][5] = bLV.getObservedValue(i).getSComponent();
            }
            }
        
        columnTitles[0] = new String ("Date");
        columnTitles[1] = new String ("Day of Year");
        columnTitles[2] = new String (bLV.getComponentAt(0).toString() +" ("+bLV.getUnitLabelAtComponent(0)+")");
        columnTitles[3] = new String (bLV.getComponentAt(1).toString() +" ("+bLV.getUnitLabelAtComponent(1)+")");
        columnTitles[4] = new String (bLV.getComponentAt(2).toString() +" ("+bLV.getUnitLabelAtComponent(2)+")");

        if(bLV.getFormat().equalsIgnoreCase("IBFV2.00")){
           columnTitles[5] = new String ("Scalar F (nT)");
        }

        this.observedValuesTable.setModel(new BLVTableModel(
            tableEntries,
            columnTitles
//            new String [] {
//                "Date",
//                "Day of Year",
//                bLV.getComponentAt(0).toString() +" ("+bLV.getUnitLabelAtComponent(0)+")",
//                bLV.getComponentAt(1).toString() +" ("+bLV.getUnitLabelAtComponent(1)+")",
//                bLV.getComponentAt(2).toString() +" ("+bLV.getUnitLabelAtComponent(2)+")",
//                bLV.getComponentAt(2).toString() +" ("+bLV.getUnitLabelAtComponent(2)+")",
                
//                          }
            )); 
     excel_adapter = new ExcelAdapter (this, observedValuesTable, 
                                      true, false, false, true, true);   
    }

    public ExcelAdapter getExcelAdapter () { return excel_adapter; }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        observedValuesTable = new javax.swing.JTable();
        fileNameLabel = new javax.swing.JLabel();

        observedValuesTable.setFont(new java.awt.Font("Courier New", 0, 11));
        observedValuesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        observedValuesTable.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(observedValuesTable);

        fileNameLabel.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(230, 230, 230)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fileNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(183, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(fileNameLabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(118, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel fileNameLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable observedValuesTable;
    // End of variables declaration//GEN-END:variables
    
}
